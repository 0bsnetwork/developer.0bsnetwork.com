{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the 0bsNetwork Developer Hub You'll find comprehensive guides and documentation to help you start working with the 0bsnetwork as quickly as possible, as well as support if you get stuck. Let's jump right in! This developer site is written with the none-blockchain developer in mind, and you shouldn't need to do much blockchain research before diving in. Our tools are standard and we support enough languages and platforms for most developers to be able to get stuck in straight away and learn the blockchain parts as you go. Experienced blockchain developers can jump right to the relevant section, the below links may help. For none-developers, please visit our website or docs site here; https://docs.0bsnetwork.com/ Quick Links Getting Started Data Service Docs Javascript Library Smart Contracts Tutorials Contact Info Telegram Group: @0bsdev - Ask your development questions here Dev Support: dev@0bsnetwork.com Please let us know if you find any errors or confusing parts of the documentation!","title":"Home"},{"location":"#welcome-to-the-0bsnetwork-developer-hub","text":"You'll find comprehensive guides and documentation to help you start working with the 0bsnetwork as quickly as possible, as well as support if you get stuck. Let's jump right in! This developer site is written with the none-blockchain developer in mind, and you shouldn't need to do much blockchain research before diving in. Our tools are standard and we support enough languages and platforms for most developers to be able to get stuck in straight away and learn the blockchain parts as you go. Experienced blockchain developers can jump right to the relevant section, the below links may help. For none-developers, please visit our website or docs site here; https://docs.0bsnetwork.com/","title":"Welcome to the 0bsNetwork Developer Hub"},{"location":"#quick-links","text":"Getting Started Data Service Docs Javascript Library Smart Contracts Tutorials","title":"Quick Links"},{"location":"#contact-info","text":"Telegram Group: @0bsdev - Ask your development questions here Dev Support: dev@0bsnetwork.com Please let us know if you find any errors or confusing parts of the documentation!","title":"Contact Info"},{"location":"about/","text":"About 0bsNetwork 0bsNetwork is a LPOS - Leasing Proof of Stake BlockChain, this differs from something like Bitcoin or Ethereum, as rather than having miners producing proof of work, for example, generating hashes to solve a challenge, a stake of coins instead secures the network. In our case, the coin is ZBS coin. Running a full node on the network requires that the node has a 'generating balance' of at least 1000 ZBS coins, these can either be in the nodes wallet, or leased to the node. Once your node has established 1000 ZBS generating balance it will begin generating blocks. The more coins you have, the more often you will generate a block. Nodes that generate blocks recieve the transaction fees as the reward (As opposed to the block reward in bitcoin) Our network is entirely pre-mined, in a good way, we have 51m coins issued in the genesis block, so the supply will never change. You can create a token on our platform right from the wallet (Or using a library or API if you wish) and set its supply, details etc. These are also refferred to 'assets' within the code and transactions. Main / Test Confrimations < More details about chain from a dev POV> Without further ado, lets move onto getting started where we explain all the parts of the system, and what you need to get up and running","title":"About 0bsNetwork"},{"location":"about/#about-0bsnetwork","text":"0bsNetwork is a LPOS - Leasing Proof of Stake BlockChain, this differs from something like Bitcoin or Ethereum, as rather than having miners producing proof of work, for example, generating hashes to solve a challenge, a stake of coins instead secures the network. In our case, the coin is ZBS coin. Running a full node on the network requires that the node has a 'generating balance' of at least 1000 ZBS coins, these can either be in the nodes wallet, or leased to the node. Once your node has established 1000 ZBS generating balance it will begin generating blocks. The more coins you have, the more often you will generate a block. Nodes that generate blocks recieve the transaction fees as the reward (As opposed to the block reward in bitcoin) Our network is entirely pre-mined, in a good way, we have 51m coins issued in the genesis block, so the supply will never change. You can create a token on our platform right from the wallet (Or using a library or API if you wish) and set its supply, details etc. These are also refferred to 'assets' within the code and transactions. Main / Test Confrimations < More details about chain from a dev POV> Without further ado, lets move onto getting started where we explain all the parts of the system, and what you need to get up and running","title":"About 0bsNetwork"},{"location":"cs/","text":"","title":"C# Library"},{"location":"dataservice/","text":"","title":"Data Service API"},{"location":"devintro/","text":"Introduction This section will explain all the parts of our platform from a developers point of view. Key Players Full Node This is the 'core' of our platform. Each node processes transactions into blocks. A node contains a wallet. A collection of nodes create ... The Network We have 2 networks, MainNet and TestNet. Testnet is where all development can take place as the coins are worthless, and you can afford to make mistakes. You can think of MainNet as 'Production'. For MainNet you can replace testnet- in all the URLs in this documentation. Full Node API Our full node exposes an API for; - Transactions (Creating and Broadcasting) - Node, Network and Address information - Node operation and configuration However, in some cases, to get aggregate data such as data from data transactions, you are better using the data service API listed below. Client / Wallet A hosted version of a wallet for those that do not run a full node, it connects to our full node to get its information by default but you can also point it at your own node. Here you can view your balances, create tokens, Send and receive, Trade and view blockchain info https://client.testnet-0bsnetwork.com Block Explorer Our block explorer lists all the blocks within our network, you can drill down to transaction level and see all the details. This is useful to look into transactions as you are developing to check you get the expected result. https://explorer.0bsnetwork.com (Select testnet from dropdown) IDE / Smart Contracts Our smart contracts are written in a language called RIDE and can be applied to either an Asset to create a 'Smart Asset' or an account (Address) to create a 'Smart Account' This enables us to create behaviours on a token (Trading restraints for example) or an account (Multi Signature) You can have a play and use our REPL at the below link. There's also some sample scripts and you can deploy right from the IDE page. https://ide.0bsnetwork.com Data Service This is a nice fast rest API that exposes information from our blockchain such as; Data from data transactions (Ability to query and filter) Information about Assets Trading Information (Stats, Prices, Volume) See the Data Service API Section for details","title":"Components and Services"},{"location":"devintro/#introduction","text":"This section will explain all the parts of our platform from a developers point of view.","title":"Introduction"},{"location":"devintro/#key-players","text":"","title":"Key Players"},{"location":"devintro/#full-node","text":"This is the 'core' of our platform. Each node processes transactions into blocks. A node contains a wallet. A collection of nodes create ...","title":"Full Node"},{"location":"devintro/#the-network","text":"We have 2 networks, MainNet and TestNet. Testnet is where all development can take place as the coins are worthless, and you can afford to make mistakes. You can think of MainNet as 'Production'. For MainNet you can replace testnet- in all the URLs in this documentation.","title":"The Network"},{"location":"devintro/#full-node-api","text":"Our full node exposes an API for; - Transactions (Creating and Broadcasting) - Node, Network and Address information - Node operation and configuration However, in some cases, to get aggregate data such as data from data transactions, you are better using the data service API listed below.","title":"Full Node API"},{"location":"devintro/#client-wallet","text":"A hosted version of a wallet for those that do not run a full node, it connects to our full node to get its information by default but you can also point it at your own node. Here you can view your balances, create tokens, Send and receive, Trade and view blockchain info https://client.testnet-0bsnetwork.com","title":"Client / Wallet"},{"location":"devintro/#block-explorer","text":"Our block explorer lists all the blocks within our network, you can drill down to transaction level and see all the details. This is useful to look into transactions as you are developing to check you get the expected result. https://explorer.0bsnetwork.com (Select testnet from dropdown)","title":"Block Explorer"},{"location":"devintro/#ide-smart-contracts","text":"Our smart contracts are written in a language called RIDE and can be applied to either an Asset to create a 'Smart Asset' or an account (Address) to create a 'Smart Account' This enables us to create behaviours on a token (Trading restraints for example) or an account (Multi Signature) You can have a play and use our REPL at the below link. There's also some sample scripts and you can deploy right from the IDE page. https://ide.0bsnetwork.com","title":"IDE / Smart Contracts"},{"location":"devintro/#data-service","text":"This is a nice fast rest API that exposes information from our blockchain such as; Data from data transactions (Ability to query and filter) Information about Assets Trading Information (Stats, Prices, Volume) See the Data Service API Section for details","title":"Data Service"},{"location":"fullnode/","text":"","title":"Full Node Operation"},{"location":"java/","text":"","title":"Java Library"},{"location":"javascript/","text":"","title":"Javascript Libraries"},{"location":"link/","text":"","title":"0bsLink"},{"location":"nodeapi/","text":"","title":"Full Node REST API"},{"location":"python/","text":"","title":"Python Library"},{"location":"smartcontracts/","text":"","title":"Smart Contracts"},{"location":"transactions/","text":"Transactions Transaction Types Each transaction type is given an integer to represent it as follows Transaction Type Name Description Fee (ZBS) 3 Issue Create a new token / asset 500.00 4 Transfer Send ZBS or Token to another address 0.05 5 ReIssue Issue more of your token 200.00 6 Burn Destroy X tokens 5.00 7 Exchange A Trade. Buy / Sell 0.20 8 Lease Start leasing to another address 5.00 9 LeaseCancel Cancel a Lease 1.00 10 CreateAlias Create an alias for your address 10 11 MassTransfer Send up to 100 Transfers in 1 transaction 0.05 12 Data Save data to the blockchain 0.03 13 SetScript Add a script to an Address 10.00 14 CustomFee Setup a Custom Fee for your Asset 50.00 15 SetAsset Set a script on an asset 10.00 16 ContractInvoke Run a contract 0.10","title":"Transactions"},{"location":"transactions/#transactions","text":"","title":"Transactions"},{"location":"transactions/#transaction-types","text":"Each transaction type is given an integer to represent it as follows Transaction Type Name Description Fee (ZBS) 3 Issue Create a new token / asset 500.00 4 Transfer Send ZBS or Token to another address 0.05 5 ReIssue Issue more of your token 200.00 6 Burn Destroy X tokens 5.00 7 Exchange A Trade. Buy / Sell 0.20 8 Lease Start leasing to another address 5.00 9 LeaseCancel Cancel a Lease 1.00 10 CreateAlias Create an alias for your address 10 11 MassTransfer Send up to 100 Transfers in 1 transaction 0.05 12 Data Save data to the blockchain 0.03 13 SetScript Add a script to an Address 10.00 14 CustomFee Setup a Custom Fee for your Asset 50.00 15 SetAsset Set a script on an asset 10.00 16 ContractInvoke Run a contract 0.10","title":"Transaction Types"},{"location":"tutorials/","text":"","title":"Tutorials"}]}